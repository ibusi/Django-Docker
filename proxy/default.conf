#設定ファイルには、主に「プログラムを使っていく上で変更するかもしれない値（設定値）」を書いておく。
#そして、プログラムの方は動くときに設定ファイルを読み込むように作る。
#こうしておくことで、プログラム自体は変えないでプログラムの動きを変えたりできる。

#Nginxの基本構文
#設定ファイルは、ディレクティブ（命令）と言われる設定項目の集合
#serverディレクティブがバーチャルサーバが作成
server {

    #listenディレクティブにはバーチャルサーバがリクエストを受け付けるIPアドレスやポート番号を設定します。
　　#IPアドレスを指定するときには"listen IPアドレス"あるいは"listen IPアドレス:ポート"の形式で記述します
　　#ipアドレスの記入を省略すると0.0.0.0扱いになる
    listen 8080;

    #スタティックファイルをserveすることを許可する
    #URIとは名前または場所を識別する書き方のルールの総称。URLやURNは、URIで定められたルールに従って書かれたり使われたりする。
    #URL（URI）のパス毎の設定を記述できる。リクエストされたURIパスがこのlocationディレクティブのパスの条件に一致した場合に、
    #locationコンテキストに記述した設定が適応される。

    #ドキュメントルートとは、Webサーバ（HTTPサーバ）やFTPサーバが外部に公開するファイルなどが置かれたディレクトリ（フォルダ）
    #そのディレクトリにあるファイルと、下の階層にあるファイルやディレクトリが公開される。
    #nginx の場合、ディレクトリごとにドキュメントルートを設定したい時は、location の内部に alias を記述する。
    #今回やっていることは/staticにアクセスすると/vol/staticのパスが連結される
    location /static {
        alias /vol/static;
    }

    #uwsgi_passは、nginxからのリクエストを受け付けるwsgiのアドレス。
    #これでuwsgiとnginxがつながった
　  #今回は/(全てのアドレス(/staticを除く))に対してappというホストネームのポート8000を返す
　　#entrypoint.shでuwsgiをポート8000で動かす記述をしたので8000にあわさなければならない

    #include the specified file as immediate configuration

    #nginx は uwsgi にコンタクトをとるとき、クライアント（外部から接続してきた人）の情報をガバッと渡す。
    #ただ「こんにちは」というだけだったら、uwsgi も何をすればいいかわからない。
    #このときに渡される変数の情報がuwsgi_paramsである。
    #uwsgi_paramsファイルを作りオフィシャルサイトからとってきた値をペースト
    location / {
        uwsgi_pass app:8000;
        include /etc/nginx/uwsgi_params;
    }
}